{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component, Fragment } from 'react';\nimport axios from 'axios';\nimport Pusher from 'pusher-js';\nimport Layout from '../components/Layout';\nimport BarChart from '../components/Bar';\nimport Table from '../components/Table';\nimport LineChart from '../components/Line';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nvar pusher = new Pusher('83d7f0044a58bb41c86c', {\n  cluster: \"ap4\",\n  encrypted: true\n});\nconst channel = pusher.subscribe('demo-stats');\nexport default class IndexPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      images: [],\n      targetA: [],\n      targetB: [],\n      targetC: [],\n      lineTemp: [],\n      linePressure: [],\n      lineHumid: [],\n      lineLight: [],\n      lineNoise: [],\n      lineGas: [],\n      time: [],\n      key: 'chart1'\n    };\n  }\n\n  componentDidMount() {\n    this.receiveStatsFromPusher();\n    this.receiveImgFromPusher();\n  } // componentWillUnmount() {\n  //   this.abortController.abort();\n  // }\n\n\n  receiveStatsFromPusher() {\n    channel.bind('bar-stats', data => {\n      console.log(data);\n      this.setState({\n        data // time: [...[2, this.state.lineTemp.length + 1]]\n\n      });\n      this.setState(() => {\n        this.state.lineTemp.push(data[0]);\n        this.state.linePressure.push(data[1]);\n        this.state.lineHumid.push(data[2]);\n        this.state.lineLight.push(data[3]);\n        this.state.lineNoise.push(data[4]);\n        this.state.lineGas.push(data[5]);\n        this.state.time.push(new Date().toTimeString().substring(0, 8));\n      });\n      console.log(\"lineTemp : \" + this.state.lineTemp);\n      console.log(\"time : \" + this.state.time);\n    });\n  }\n\n  receiveImgFromPusher() {\n    channel.bind('gallery', data => {\n      this.setState({\n        images: [data.image, ...this.state.images]\n      });\n\n      if (Object.values(data)[0].id == 1) {\n        this.setState({\n          targetA: [...this.state.data]\n        });\n      } else if (Object.values(data)[0].id == 2) {\n        this.setState({\n          targetB: [...this.state.data]\n        });\n      } else {\n        this.setState({\n          targetC: [...this.state.data]\n        });\n      }\n    });\n  }\n\n  render() {\n    const image = (url, index) => __jsx(\"img\", {\n      alt: \"\",\n      className: \"photo\",\n      key: `image-${index} }`,\n      src: url\n    });\n\n    const images = this.state.images.map((e, i) => image(e.secure_url, i));\n    return __jsx(Layout, {\n      pageTitle: \"Realtime Data Visualization\"\n    }, __jsx(\"main\", {\n      className: \"container-fluid wf\"\n    }, __jsx(\"div\", {\n      className: \"row rw1\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-2 gallery\"\n    }, \"Image Stream\", images), __jsx(\"div\", {\n      className: \"col-8 col-sm-6 wf\"\n    }, \"Video Stream\"), __jsx(\"div\", {\n      className: \"col wf\"\n    }, \"Graphs\", __jsx(Tabs, {\n      id: \"controlled-tab-example\",\n      activeKey: this.state.key,\n      onSelect: k => this.setState({\n        key: k\n      })\n    }, __jsx(Tab, {\n      eventKey: \"chart1\",\n      title: \"Chart 1\"\n    }, __jsx(LineChart, {\n      data: this.state.lineTemp,\n      time: this.state.time,\n      title: \"Temperature Overtime\"\n    }), __jsx(LineChart, {\n      data: this.state.linePressure,\n      time: this.state.time,\n      title: \"Pressure Overtime\"\n    }), __jsx(LineChart, {\n      data: this.state.lineHumid,\n      time: this.state.time,\n      title: \"Humidity Overtime\"\n    })), __jsx(Tab, {\n      eventKey: \"chart2\",\n      title: \"Chart 2\"\n    }, __jsx(LineChart, {\n      data: this.state.lineLight,\n      time: this.state.time,\n      title: \"Light Overtime\"\n    }), __jsx(LineChart, {\n      data: this.state.lineNoise,\n      time: this.state.time,\n      title: \"Noise Overtime\"\n    }), __jsx(LineChart, {\n      data: this.state.lineGas,\n      time: this.state.time,\n      title: \"Gas Overtime\"\n    }))))), __jsx(\"div\", {\n      className: \"row rw2\"\n    }, __jsx(\"div\", {\n      className: \"col wf\"\n    }, \"Table\", __jsx(Table, {\n      a: this.state.targetA,\n      b: this.state.targetB,\n      c: this.state.targetC\n    })), __jsx(\"div\", {\n      className: \"col wf\"\n    }, \"Bar Chart\", __jsx(BarChart, {\n      data: this.state.data\n    })), __jsx(\"div\", {\n      className: \"col wf\"\n    }))));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}