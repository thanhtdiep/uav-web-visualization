{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nexport default class LineChart extends React.Component {\n  render() {\n    console.log(Object.values(this.props.data));\n    console.log(this.props.time);\n\n    const parseData = (data, time) => ({\n      labels: time,\n      datasets: [{\n        label: this.props.title,\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: \"rgba(75,192,192,0.4)\",\n        borderColor: \"rgba(75,192,192,1)\",\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: \"rgba(75,192,192,1)\",\n        pointBackgroundColor: \"#fff\",\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n        pointHoverBorderColor: \"rgba(220,220,220,1)\",\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        spanGaps: false,\n        data\n      }]\n    });\n\n    const options = {\n      scales: {\n        yAxes: [{\n          ticks: {\n            beginAtZero: true\n          }\n        }]\n      },\n      maintainAspectRatio: true\n    };\n    return __jsx(Line, {\n      data: parseData(Object.values(this.props.data), this.props.time),\n      option: options\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/n9607234/Desktop/2020sem2/EGH455/Web Interface/components/Line.js"],"names":["React","Line","LineChart","Component","render","console","log","Object","values","props","data","time","parseData","labels","datasets","label","title","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","spanGaps","options","scales","yAxes","ticks","beginAtZero","maintainAspectRatio"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;AAEA,eAAe,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwC;AACnDC,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,MAAP,CAAc,KAAKC,KAAL,CAAWC,IAAzB,CAAZ;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKG,KAAL,CAAWE,IAAvB;;AAEA,UAAMC,SAAS,GAAG,CAACF,IAAD,EAAOC,IAAP,MAAiB;AAC/BE,MAAAA,MAAM,EAAEF,IADuB;AAE/BG,MAAAA,QAAQ,EAAE,CAAC;AACPC,QAAAA,KAAK,EAAE,KAAKN,KAAL,CAAWO,KADX;AAEPC,QAAAA,IAAI,EAAE,KAFC;AAGPC,QAAAA,WAAW,EAAE,GAHN;AAIPC,QAAAA,eAAe,EAAE,sBAJV;AAKPC,QAAAA,WAAW,EAAE,oBALN;AAMPC,QAAAA,cAAc,EAAE,MANT;AAOPC,QAAAA,UAAU,EAAE,EAPL;AAQPC,QAAAA,gBAAgB,EAAE,GARX;AASPC,QAAAA,eAAe,EAAE,OATV;AAUPC,QAAAA,gBAAgB,EAAE,oBAVX;AAWPC,QAAAA,oBAAoB,EAAE,MAXf;AAYPC,QAAAA,gBAAgB,EAAE,CAZX;AAaPC,QAAAA,gBAAgB,EAAE,CAbX;AAcPC,QAAAA,yBAAyB,EAAE,oBAdpB;AAePC,QAAAA,qBAAqB,EAAE,qBAfhB;AAgBPC,QAAAA,qBAAqB,EAAE,CAhBhB;AAiBPC,QAAAA,WAAW,EAAE,CAjBN;AAkBPC,QAAAA,cAAc,EAAE,EAlBT;AAmBPC,QAAAA,QAAQ,EAAE,KAnBH;AAoBPxB,QAAAA;AApBO,OAAD;AAFqB,KAAjB,CAAlB;;AA0BA,UAAMyB,OAAO,GAAG;AACZC,MAAAA,MAAM,EAAE;AACJC,QAAAA,KAAK,EAAE,CAAC;AACJC,UAAAA,KAAK,EAAE;AACHC,YAAAA,WAAW,EAAE;AADV;AADH,SAAD;AADH,OADI;AAQZC,MAAAA,mBAAmB,EAAE;AART,KAAhB;AAWA,WACI,MAAC,IAAD;AACI,MAAA,IAAI,EAAE5B,SAAS,CAACL,MAAM,CAACC,MAAP,CAAc,KAAKC,KAAL,CAAWC,IAAzB,CAAD,EAAiC,KAAKD,KAAL,CAAWE,IAA5C,CADnB;AAEI,MAAA,MAAM,EAAEwB;AAFZ,MADJ;AAMH;;AAhDkD","sourcesContent":["import React from 'react';\r\nimport { Line } from 'react-chartjs-2'\r\n\r\nexport default class LineChart extends React.Component {\r\n    render() {\r\n        console.log(Object.values(this.props.data));\r\n        console.log(this.props.time);\r\n\r\n        const parseData = (data, time) => ({\r\n            labels: time,\r\n            datasets: [{\r\n                label: this.props.title,\r\n                fill: false,\r\n                lineTension: 0.1,\r\n                backgroundColor: \"rgba(75,192,192,0.4)\",\r\n                borderColor: \"rgba(75,192,192,1)\",\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: \"rgba(75,192,192,1)\",\r\n                pointBackgroundColor: \"#fff\",\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\r\n                pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n                spanGaps: false,\r\n                data\r\n            }]\r\n        })\r\n\r\n        const options = {\r\n            scales: {\r\n                yAxes: [{\r\n                    ticks: {\r\n                        beginAtZero: true\r\n                    }\r\n                }]\r\n            },\r\n            maintainAspectRatio: true\r\n        }\r\n\r\n        return (\r\n            <Line\r\n                data={parseData(Object.values(this.props.data), this.props.time)}\r\n                option={options}\r\n            />\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}