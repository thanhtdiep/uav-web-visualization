{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, Fragment } from 'react';\nimport axios from 'axios';\nimport Pusher from 'pusher-js';\nimport Layout from '../components/Layout';\nimport BarChart from '../components/Bar';\nimport Table from '../components/Table';\nimport LineChart from '../components/Line';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nvar pusher = new Pusher('83d7f0044a58bb41c86c', {\n  cluster: \"ap4\",\n  encrypted: true\n});\nvar channel = pusher.subscribe('demo-stats');\n\nvar IndexPage = /*#__PURE__*/function (_React$Component) {\n  _inherits(IndexPage, _React$Component);\n\n  var _super = _createSuper(IndexPage);\n\n  function IndexPage(props) {\n    var _this;\n\n    _classCallCheck(this, IndexPage);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      data: [],\n      images: [],\n      targetA: [],\n      targetB: [],\n      targetC: [],\n      lineTemp: [],\n      linePressure: [],\n      lineHumid: [],\n      lineLight: [],\n      lineNoise: [],\n      lineGas: [],\n      time: [],\n      key: 'chart1'\n    };\n    return _this;\n  }\n\n  _createClass(IndexPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.receiveStatsFromPusher();\n      this.receiveImgFromPusher();\n    } // componentWillUnmount() {\n    //   this.abortController.abort();\n    // }\n\n  }, {\n    key: \"receiveStatsFromPusher\",\n    value: function receiveStatsFromPusher() {\n      var _this2 = this;\n\n      channel.bind('bar-stats', function (data) {\n        console.log(data);\n\n        _this2.setState({\n          data: data // time: [...[2, this.state.lineTemp.length + 1]]\n\n        });\n\n        _this2.setState(function () {\n          _this2.state.lineTemp.push(data[0]);\n\n          _this2.state.linePressure.push(data[1]);\n\n          _this2.state.lineHumid.push(data[2]);\n\n          _this2.state.lineLight.push(data[3]);\n\n          _this2.state.lineNoise.push(data[4]);\n\n          _this2.state.lineGas.push(data[5]);\n\n          _this2.state.time.push(new Date().toTimeString().substring(0, 8));\n        });\n\n        console.log(\"lineTemp : \" + _this2.state.lineTemp);\n        console.log(\"time : \" + _this2.state.time);\n      });\n    }\n  }, {\n    key: \"receiveImgFromPusher\",\n    value: function receiveImgFromPusher() {\n      var _this3 = this;\n\n      channel.bind('gallery', function (data) {\n        _this3.setState({\n          images: [data.image].concat(_toConsumableArray(_this3.state.images))\n        });\n\n        if (Object.values(data)[0].id == 1) {\n          _this3.setState({\n            targetA: _toConsumableArray(_this3.state.data)\n          });\n        } else if (Object.values(data)[0].id == 2) {\n          _this3.setState({\n            targetB: _toConsumableArray(_this3.state.data)\n          });\n        } else {\n          _this3.setState({\n            targetC: _toConsumableArray(_this3.state.data)\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var image = function image(url, index) {\n        return __jsx(\"img\", {\n          alt: \"\",\n          className: \"photo\",\n          key: \"image-\".concat(index, \" }\"),\n          src: url\n        });\n      };\n\n      var images = this.state.images.map(function (e, i) {\n        return image(e.secure_url, i);\n      });\n      return __jsx(Layout, {\n        pageTitle: \"Realtime Data Visualization\"\n      }, __jsx(\"main\", {\n        className: \"container-fluid wf\"\n      }, __jsx(\"div\", {\n        className: \"row rw1\"\n      }, __jsx(\"div\", {\n        className: \"col-sm-2 gallery\"\n      }, \"Image Stream\", images), __jsx(\"div\", {\n        className: \"col-8 col-sm-6 wf\"\n      }, \"Video Stream\"), __jsx(\"div\", {\n        className: \"col wf\"\n      }, \"Graphs\", __jsx(Tabs, {\n        id: \"controlled-tab-example\",\n        activeKey: this.state.key,\n        onSelect: function onSelect(k) {\n          return _this4.setState({\n            key: k\n          });\n        }\n      }, __jsx(Tab, {\n        eventKey: \"chart1\",\n        title: \"Chart 1\"\n      }, __jsx(LineChart, {\n        data: this.state.lineTemp,\n        time: this.state.time,\n        title: \"Temperature Overtime\"\n      }), __jsx(LineChart, {\n        data: this.state.linePressure,\n        time: this.state.time,\n        title: \"Pressure Overtime\"\n      }), __jsx(LineChart, {\n        data: this.state.lineHumid,\n        time: this.state.time,\n        title: \"Humidity Overtime\"\n      })), __jsx(Tab, {\n        eventKey: \"chart2\",\n        title: \"Chart 2\"\n      }, __jsx(LineChart, {\n        data: this.state.lineLight,\n        time: this.state.time,\n        title: \"Light Overtime\"\n      }), __jsx(LineChart, {\n        data: this.state.lineNoise,\n        time: this.state.time,\n        title: \"Noise Overtime\"\n      }), __jsx(LineChart, {\n        data: this.state.lineGas,\n        time: this.state.time,\n        title: \"Gas Overtime\"\n      }))))), __jsx(\"div\", {\n        className: \"row rw2\"\n      }, __jsx(\"div\", {\n        className: \"col wf\"\n      }, \"Table\", __jsx(Table, {\n        a: this.state.targetA,\n        b: this.state.targetB,\n        c: this.state.targetC\n      })), __jsx(\"div\", {\n        className: \"col wf\"\n      }, \"Bar Chart\", __jsx(BarChart, {\n        data: this.state.data\n      })), __jsx(\"div\", {\n        className: \"col wf\"\n      }))));\n    }\n  }]);\n\n  return IndexPage;\n}(React.Component);\n\nexport { IndexPage as default };","map":null,"metadata":{},"sourceType":"module"}