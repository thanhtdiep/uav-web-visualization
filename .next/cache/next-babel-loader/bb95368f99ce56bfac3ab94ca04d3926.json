{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component, Fragment } from 'react';\nimport axios from 'axios';\nimport Pusher from 'pusher-js';\nimport Layout from '../components/Layout';\nimport BarChart from '../components/Bar';\nimport Table from '../components/Table';\nimport LineChart from '../components/Line';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nvar pusher = new Pusher('83d7f0044a58bb41c86c', {\n  cluster: \"ap4\",\n  encrypted: true\n});\nconst channel = pusher.subscribe('demo-stats');\nexport default class IndexPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      images: [],\n      targetA: [],\n      targetB: [],\n      targetC: [],\n      lineTemp: [],\n      linePressure: [],\n      lineHumid: [],\n      lineLight: [],\n      lineNoise: [],\n      lineGas: [],\n      time: [],\n      key: 'chart1'\n    };\n  }\n\n  componentDidMount() {\n    this.receiveStatsFromPusher();\n    this.receiveImgFromPusher();\n  } // componentWillUnmount() {\n  //   this.abortController.abort();\n  // }\n\n\n  receiveStatsFromPusher() {\n    channel.bind('bar-stats', data => {\n      console.log(data);\n      this.setState({\n        data // time: [...[2, this.state.lineTemp.length + 1]]\n\n      });\n      this.setState(() => {\n        this.state.lineTemp.push(data[0]);\n        this.state.linePressure.push(data[1]);\n        this.state.lineHumid.push(data[2]);\n        this.state.lineLight.push(data[3]);\n        this.state.lineNoise.push(data[4]);\n        this.state.lineGas.push(data[5]);\n        this.state.time.push(new Date().toTimeString().substring(0, 8));\n      });\n      console.log(\"lineTemp : \" + this.state.lineTemp);\n      console.log(\"time : \" + this.state.time); // console.log(\"Timestamp: \" + this.state.time);\n    });\n  }\n\n  receiveImgFromPusher() {\n    channel.bind('gallery', data => {\n      this.setState({\n        images: [data.image, ...this.state.images]\n      });\n\n      if (data.id == 1) {\n        this.setState({\n          targetA: [...this.state.data]\n        });\n      } else if (data.id == 2) {\n        this.setState({\n          targetB: [...this.state.data]\n        });\n      } else {\n        this.setState({\n          targetC: [...this.state.data]\n        });\n      }\n    });\n  }\n\n  render() {\n    const image = (url, index) => __jsx(\"img\", {\n      alt: \"\",\n      className: \"photo\",\n      key: `image-${index} }`,\n      src: url\n    });\n\n    const images = this.state.images.map((e, i) => image(e.secure_url, i));\n    return __jsx(Layout, {\n      pageTitle: \"Realtime Data Visualization\"\n    }, __jsx(\"main\", {\n      className: \"container-fluid wf\"\n    }, __jsx(\"div\", {\n      className: \"row rw1\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-2 gallery\"\n    }, \"Image Stream\", images), __jsx(\"div\", {\n      className: \"col-8 col-sm-6 wf\"\n    }, \"Video Stream\"), __jsx(\"div\", {\n      className: \"col wf\"\n    }, \"Graphs\", __jsx(Tabs, {\n      id: \"controlled-tab-example\",\n      activeKey: this.state.key,\n      onSelect: k => this.setState({\n        key: k\n      })\n    }, __jsx(Tab, {\n      eventKey: \"chart1\",\n      title: \"Chart 1\"\n    }, __jsx(LineChart, {\n      data: this.state.lineTemp,\n      time: this.state.time,\n      title: \"Temperature Overtime\"\n    }), __jsx(LineChart, {\n      data: this.state.linePressure,\n      time: this.state.time,\n      title: \"Pressure Overtime\"\n    }), __jsx(LineChart, {\n      data: this.state.lineHumid,\n      time: this.state.time,\n      title: \"Humidity Overtime\"\n    })), __jsx(Tab, {\n      eventKey: \"chart2\",\n      title: \"Chart 2\"\n    }, __jsx(LineChart, {\n      data: this.state.lineLight,\n      time: this.state.time,\n      title: \"Light Overtime\"\n    }), __jsx(LineChart, {\n      data: this.state.lineNoise,\n      time: this.state.time,\n      title: \"Noise Overtime\"\n    }), __jsx(LineChart, {\n      data: this.state.lineGas,\n      time: this.state.time,\n      title: \"Gas Overtime\"\n    }))))), __jsx(\"div\", {\n      className: \"row rw2\"\n    }, __jsx(\"div\", {\n      className: \"col wf\"\n    }, \"Table\", __jsx(Table, {\n      a: this.state.targetA,\n      b: this.state.targetB,\n      c: this.state.targetC\n    })), __jsx(\"div\", {\n      className: \"col wf\"\n    }, \"Bar Chart\", __jsx(BarChart, {\n      data: this.state.data\n    })), __jsx(\"div\", {\n      className: \"col wf\"\n    }))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/n9607234/Desktop/2020sem2/EGH455/Web Interface/pages/index.js"],"names":["React","Component","Fragment","axios","Pusher","Layout","BarChart","Table","LineChart","Tabs","Tab","pusher","cluster","encrypted","channel","subscribe","IndexPage","constructor","props","state","data","images","targetA","targetB","targetC","lineTemp","linePressure","lineHumid","lineLight","lineNoise","lineGas","time","key","componentDidMount","receiveStatsFromPusher","receiveImgFromPusher","bind","console","log","setState","push","Date","toTimeString","substring","image","id","render","url","index","map","e","i","secure_url","k"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport axios from 'axios';\r\nimport Pusher from 'pusher-js';\r\nimport Layout from '../components/Layout';\r\nimport BarChart from '../components/Bar';\r\nimport Table from '../components/Table';\r\nimport LineChart from '../components/Line';\r\nimport Tabs from 'react-bootstrap/Tabs'\r\nimport Tab from 'react-bootstrap/Tab'\r\n\r\nvar pusher = new Pusher('83d7f0044a58bb41c86c', {\r\n  cluster: \"ap4\",\r\n  encrypted: true\r\n});\r\nconst channel = pusher.subscribe('demo-stats');\r\n\r\nexport default class IndexPage extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      data: [],\r\n      images: [],\r\n      targetA: [],\r\n      targetB: [],\r\n      targetC: [],\r\n      lineTemp: [],\r\n      linePressure: [],\r\n      lineHumid: [],\r\n      lineLight: [],\r\n      lineNoise: [],\r\n      lineGas: [],\r\n      time: [],\r\n      key: 'chart1'\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.receiveStatsFromPusher()\r\n    this.receiveImgFromPusher();\r\n  }\r\n\r\n  // componentWillUnmount() {\r\n  //   this.abortController.abort();\r\n  // }\r\n\r\n  receiveStatsFromPusher() {\r\n    channel.bind('bar-stats', data => {\r\n      console.log(data);\r\n      this.setState({\r\n        data\r\n        // time: [...[2, this.state.lineTemp.length + 1]]\r\n      })\r\n      this.setState(() => {\r\n        this.state.lineTemp.push(data[0]);\r\n        this.state.linePressure.push(data[1]);\r\n        this.state.lineHumid.push(data[2]);\r\n        this.state.lineLight.push(data[3]);\r\n        this.state.lineNoise.push(data[4]);\r\n        this.state.lineGas.push(data[5]);\r\n        this.state.time.push((new Date).toTimeString().substring(0, 8));\r\n      })\r\n      console.log(\"lineTemp : \" + this.state.lineTemp);\r\n      console.log(\"time : \" + this.state.time);     // console.log(\"Timestamp: \" + this.state.time);\r\n    })\r\n\r\n  }\r\n\r\n  receiveImgFromPusher() {\r\n    channel.bind('gallery', data => {\r\n      this.setState({\r\n        images: [data.image, ...this.state.images],\r\n      });\r\n      if (data.id == 1) {\r\n        this.setState({ targetA: [...this.state.data] });\r\n      } else if (data.id == 2) {\r\n        this.setState({ targetB: [...this.state.data] });\r\n      } else {\r\n        this.setState({ targetC: [...this.state.data] });\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const image = (url, index) => (\r\n      <img alt=\"\" className=\"photo\" key={`image-${index} }`} src={url} />\r\n    );\r\n    const images = this.state.images.map((e, i) => image(e.secure_url, i));\r\n\r\n    return (\r\n      <Layout pageTitle=\"Realtime Data Visualization\">\r\n        <main className=\"container-fluid wf\">\r\n\r\n          <div className=\"row rw1\">\r\n            <div className=\"col-sm-2 gallery\">\r\n              Image Stream\r\n              {images}\r\n              {/* <img src=\"http://res.cloudinary.com/dtmjpfpip/image/upload/v1599914558/pxa7wzqdlznqzdi3tof4.jpg\" /> */}\r\n            </div>\r\n            <div className=\"col-8 col-sm-6 wf\">Video Stream</div>\r\n            <div className=\"col wf\">Graphs\r\n            <Tabs\r\n                id=\"controlled-tab-example\"\r\n                activeKey={this.state.key}\r\n                onSelect={(k) => this.setState({ key: k })}\r\n              >\r\n                <Tab eventKey=\"chart1\" title=\"Chart 1\">\r\n                  <LineChart data={this.state.lineTemp} time={this.state.time} title=\"Temperature Overtime\" />\r\n                  <LineChart data={this.state.linePressure} time={this.state.time} title=\"Pressure Overtime\" />\r\n                  <LineChart data={this.state.lineHumid} time={this.state.time} title=\"Humidity Overtime\" />\r\n                </Tab>\r\n                <Tab eventKey=\"chart2\" title=\"Chart 2\">\r\n                  <LineChart data={this.state.lineLight} time={this.state.time} title=\"Light Overtime\" />\r\n                  <LineChart data={this.state.lineNoise} time={this.state.time} title=\"Noise Overtime\" />\r\n                  <LineChart data={this.state.lineGas} time={this.state.time} title=\"Gas Overtime\" />\r\n                </Tab>\r\n              </Tabs>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row rw2\">\r\n            <div className=\"col wf\">\r\n              Table\r\n              <Table a={this.state.targetA} b={this.state.targetB} c={this.state.targetC} />\r\n            </div>\r\n            <div className=\"col wf\">Bar Chart\r\n              <BarChart data={this.state.data} />\r\n            </div>\r\n            <div className=\"col wf\"></div>\r\n          </div>\r\n        </main>\r\n      </Layout >\r\n    );\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}